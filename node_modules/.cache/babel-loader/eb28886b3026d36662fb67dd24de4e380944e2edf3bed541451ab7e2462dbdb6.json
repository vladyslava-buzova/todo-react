{"ast":null,"code":"var _jsxFileName = \"/Users/vladyslavabuzova/my-projects/tasks/todo-react/src/components/main.tsx\",\n  _s = $RefreshSig$();\nimport classNames from 'classnames';\nimport { FaRegEdit } from 'react-icons/fa';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Main = _ref => {\n  _s();\n  let {\n    data,\n    setData\n  } = _ref;\n  const [editTodo, setEditTodo] = useState(0);\n  const [editValue, setEditValue] = useState('');\n  const [isToggleAll, setIsToggleAll] = useState(false);\n  const [focus, setFocus] = useState(false);\n  const handleRemove = id => {\n    const newList = data.filter(item => item.id !== id);\n    setData(newList);\n  };\n  const handleCheck = id => {\n    setData(data.map(todo => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          completed: !todo.completed\n        };\n      }\n      return todo;\n    }));\n  };\n  const handleToggleAll = () => {\n    setIsToggleAll(!isToggleAll);\n    if (isToggleAll) {\n      setData(data.map(todo => {\n        return {\n          ...todo,\n          completed: false\n        };\n      }));\n    }\n    if (!isToggleAll) {\n      setData(data.map(todo => {\n        return {\n          ...todo,\n          completed: true\n        };\n      }));\n    }\n  };\n  const inputRef = React.useRef(null);\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [focus]);\n  const handleEdit = (id, title) => {\n    setFocus(true);\n    setEditTodo(id);\n    setEditValue(title);\n  };\n\n  // save changes onBlur\n  const handleSubmitValue = id => {\n    const newValue = data.map(todo => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          title: editValue\n        };\n      }\n      return todo;\n    });\n    setData(newValue);\n    setEditTodo(0);\n    if (!editValue) {\n      handleRemove(id);\n    }\n    setFocus(false);\n  };\n\n  // save changes with Enter press\n  const handleEnter = (e, id) => {\n    if (e.code === 'Enter') {\n      handleSubmitValue(id);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      id: \"toggle-all\",\n      className: \"toggle-all\",\n      \"data-cy\": \"toggleAll\",\n      onChange: handleToggleAll,\n      checked: isToggleAll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"toggle-all\",\n      children: \"Mark all as complete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      \"data-cy\": \"todoList\",\n      children: data.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: classNames({\n          completed: todo.completed\n        }, {\n          editing: editTodo === todo.id\n        }),\n        \"data-id\": todo.id,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"toggle\",\n            id: \"toggle-view\",\n            onChange: () => handleCheck(todo.id),\n            checked: todo.completed,\n            value: editValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: todo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"destroy\",\n            \"data-cy\": \"deleteTodo\",\n            onClick: () => handleRemove(todo.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"change\",\n            \"data-cy\": \"deleteTodo\",\n            onClick: () => handleEdit(todo.id, todo.title),\n            children: /*#__PURE__*/_jsxDEV(FaRegEdit, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"edit\",\n          value: editValue,\n          onChange: event => setEditValue(event.target.value),\n          onKeyDown: e => handleEnter(e, todo.id),\n          onBlur: () => handleSubmitValue(todo.id),\n          ref: input => input === null || input === void 0 ? void 0 : input.focus()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"CzeBpwosd5NfcoIMXYi7GDS8MRE=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["classNames","FaRegEdit","React","useState","useEffect","Main","data","setData","editTodo","setEditTodo","editValue","setEditValue","isToggleAll","setIsToggleAll","focus","setFocus","handleRemove","id","newList","filter","item","handleCheck","map","todo","completed","handleToggleAll","inputRef","useRef","current","handleEdit","title","handleSubmitValue","newValue","handleEnter","e","code","editing","event","target","value","input"],"sources":["/Users/vladyslavabuzova/my-projects/tasks/todo-react/src/components/main.tsx"],"sourcesContent":["\nimport classNames from 'classnames';\nimport { FaRegEdit } from 'react-icons/fa';\nimport React, { useState, useEffect } from 'react';\nimport { Todo } from '../types/Todo';\n\ntype Props = {\n  data:Todo[];\n  setData:(data: Todo[]) => void;\n};\n\nexport const Main: React.FC <Props> = ({ data, setData }) => {\n  const [editTodo, setEditTodo] = useState(0);\n  const [editValue, setEditValue] = useState('');\n  const [isToggleAll, setIsToggleAll] = useState(false);\n  const [focus, setFocus] = useState(false);\n\n  const handleRemove = (id:number) => {\n    const newList = data.filter((item) => item.id !== id);\n\n    setData(newList);\n  };\n\n  const handleCheck = (id:number): void => {\n    setData(data.map(todo => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      }\n\n      return todo;\n    }));\n  };\n\n  const handleToggleAll = () => {\n    setIsToggleAll(!isToggleAll);\n\n    if (isToggleAll) {\n      setData(data.map(todo => {\n        return {\n          ...todo,\n          completed: false,\n        };\n      }));\n    }\n\n    if (!isToggleAll) {\n      setData(data.map(todo => {\n        return {\n          ...todo,\n          completed: true,\n        };\n      }));\n    }\n  };\n\n  const inputRef = React.useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [focus]);\n\n  const handleEdit = (id:number, title: string) => {\n    setFocus(true);\n\n    setEditTodo(id);\n    setEditValue(title);\n  };\n\n  // save changes onBlur\n  const handleSubmitValue = (id:number) => {\n    const newValue = data.map(todo => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          title: editValue,\n        };\n      }\n\n      return todo;\n    });\n\n    setData(newValue);\n    setEditTodo(0);\n\n    if (!editValue) {\n      handleRemove(id);\n    }\n\n    setFocus(false);\n  };\n\n  // save changes with Enter press\n  const handleEnter = (e:React.KeyboardEvent<HTMLInputElement>, id:number) => {\n    if (e.code === 'Enter') {\n      handleSubmitValue(id);\n    }\n  };\n\n  return (\n    <section className=\"main\">\n      <input\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        data-cy=\"toggleAll\"\n        onChange={handleToggleAll}\n        checked={isToggleAll}\n      />\n      <label\n        htmlFor=\"toggle-all\"\n      >\n        Mark all as complete\n      </label>\n\n      <ul className=\"todo-list\" data-cy=\"todoList\">\n        {data.map(todo => (\n          <li\n            className={classNames(\n              { completed: todo.completed }, { editing: editTodo === todo.id },\n            )}\n          \n            data-id={todo.id}\n            key={todo.id}\n\n          >\n            <div className=\"view\">\n              <input\n                type=\"checkbox\"\n                className=\"toggle\"\n                id=\"toggle-view\"\n                onChange={() => handleCheck(todo.id)}\n                checked={todo.completed}\n                value={editValue}\n              />\n              <label>\n                {todo.title}\n              </label>\n              <button\n                type=\"button\"\n                className=\"destroy\"\n                data-cy=\"deleteTodo\"\n                onClick={() => handleRemove(todo.id)}\n              />\n              <button\n                type=\"button\"\n                className=\"change\"\n                data-cy=\"deleteTodo\"\n                onClick={() => handleEdit(todo.id, todo.title)}\n              >\n                <FaRegEdit />\n              </button>\n            </div>\n            <input\n              type=\"text\"\n              className=\"edit\"\n              value={editValue}\n              onChange={(event) => setEditValue(event.target.value)}\n              onKeyDown={(e) => handleEnter(e, todo.id)}\n              onBlur={() => handleSubmitValue(todo.id)}\n              ref={input => input?.focus()}\n            />\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}